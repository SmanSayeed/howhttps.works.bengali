# Author
translation:
  source: "Saadman Sayeed (https://www.sman.dev)"
  text_direction: "ltr" # Set to "rtl" for right-to-left languages

# Navigation
nav:
  episodes: "পর্ব"
  about: "সম্পর্কে"
  ep1: "HTTPS এর দরকার টা কি?"
  ep2: "চাবিগুলো"
  ep3: "হ্যান্ডশেক"
  ep4: "HTTPS, SSL, TLS-এর পার্থক্য"
  ep5: "সার্টিফিকেট অথরিটি"
  social: "সামাজিক হন"
  more_comics: "আরও কমিকস পড়ুন"
  continue_reading: "পড়া চালিয়ে যান"

# হোম পৃষ্ঠা
home:
  title: "HTTPS কীভাবে কাজ করে"
  certificat_cta: "পড়া শুরু করুন"
  subtitle: "HTTPS কীভাবে কাজ করে ...একটি কমিকের মাধ্যমে!"
  p1: "আপনার ব্রাউজারের ইউআরএল বারে একটি তালা চিহ্ন কেন দেখায় এবং এটি কেন গুরুত্বপূর্ণ? আমরাও ভেবেছিলাম, এবং এই কমিকটি আপনার জন্য!"
  p2: "সার্টিফিকেট, Browserbird এবং Compugter-এর অভিযানে যোগ দিন এবং দেখুন HTTPS কেন ওয়েবের ভবিষ্যতের জন্য অপরিহার্য এবং এটি কীভাবে কাজ করে।"
  p3: "খারাপ কাঁকড়ার খপ্পরে পড়বেন না (কমিকে এটি কী বোঝায় তা জানতে পারবেন)। জানুন HTTPS সম্পর্কে এবং এটি আপনার গোপনীয়তার জন্য কেন অপরিহার্য তা সম্পর্কে।"
  small_cta: "এখনই পড়া শুরু করুন"

# /episodes এর জন্য পর্বের অংশ
fragment:
  ep1: "এখান থেকে পড়া শুরু করুন। যদি আপনি এই কমিক থেকে কেবল একটি বিষয় শিখতে চান, তবে এই টপিকটি পড়ুন ।"
  ep2: "HTTPS কীভাবে কাজ করে তা বুঝতে হলে আপনাকে জানতে হবে সিমেট্রিক এবং অ্যাসিমেট্রিক কী, এনক্রিপশন কীভাবে কাজ করে। এটি কঠিন মনে হলেও বাস্তবে তা নয়।"
  ep3: "যখন আপনি একটি HTTP সুরক্ষিত সাইটে যান, তখন আপনার ব্রাউজার এবং সংযুক্ত সার্ভার একটি গোপন হ্যান্ডশেক করে। আমরা এই বিষয়টি সহজ করে ভেঙে বুঝিয়ে বলব যেন আপনি বন্ধুদের সাথে সেই গোপন হ্যান্ডশেক করতে পারেন।"
  ep4: "HTTPS, SSL, এবং TLS নিয়ে বিভ্রান্ত হওয়া সহজ। আমরা প্রায়ই এই শব্দগুলি অদলবদল করে ব্যবহার করি। আসুন প্রতিটির বিষয়ে একটু ইতিহাস সহ আলোচনা করি।"
  ep5: "তারা কী করে? কেন আমাদের তাদের দরকার? তারা কীভাবে সার্টিফিকেট যাচাই করে? এই কমিকের শেষ অধ্যায়ে এই প্রশ্ন গুলোর উত্তর দেওয়া হয়েছে!"

# পর্বগুলি
ep1:
  1: "আমাদের HTTPS কেন দরকার?"
  2: "HTTPS দরকার তিনটি কারণে।"
  3: "গোপনীয়তা, অখণ্ডতা, এবং পরিচয়।"
  4: "আসুন প্রথমে গোপনীয়তার কথা বলি।"
  5: "আমি আমার বন্ধুদের উদাহরণ ব্যবহার করব।"
  6: "no text"
  7: "আমি Browserbirdকে একটি মেসেজ পাঠাচ্ছি।"
  8: "ওহ না! মেসেজটি এনক্রিপ্টেড নয়!"
  9: "কাঁকড়াটি যোগাযোগ শুনছে এবং মেসেজ ক্যাপচার করছে।"
  10: "সম্ভাব্যভাবে এটি খারাপ কাজে ব্যবহার করতে পারে।"
  11: "গোপনীয়তার অর্থ হল কেউ আপনার মেসেজ শুনতে পারবে না।"
  12: "খারাপ কাঁকড়া। খারাপ।"
  13: "যখন আপনি HTTPS ছাড়া একটি ওয়েবসাইট ব্রাউজ করেন, তখন আমি আপনার পাসওয়ার্ড শুনতে পারি।"
  14: "আপনার ব্রাউজারের URL বারে তালার চিহ্নটি আপনাকে জানায় যে কাঁকড়াগুলি আপনার কাঁধের উপর নজর রাখছে না।"
  15: "কারণ সংখ্যা ২: অখণ্ডতা।"
  16: "উদাহরণ আসছে!"
  17: "আমি Browserbird কে আরেকটি মেসেজ পাঠাচ্ছি যা এনক্রিপ্টেড নয়।"
  18: "কিন্তু এটি Browserbird এর কাছে পৌঁছানোর আগে আমি মেসেজটি আটকাই।"
  19: "আমি Browserbird সম্পর্কে দুষ্ট কথা বলে মেসেজ টি আপডেট করে পাঠাই।"
  20: "Compugter আমার সম্পর্কে এমন কথা বলবে কেন?"
  21: "no text"
  22: "এটি বলা হয়- মাঝখান থেকে আক্রমণ।"
  23: "আর মাঝখান থেকে কাকড়ার আক্রমণ সবচেয়ে খারাপ।"
  24: "তুমি দুষ্ট কাঁকড়া। খুব দুষ্ট।"
  25: "অখণ্ডতার অর্থ হল মেসেজটি তার গন্তব্যে যাওয়ার পথে পরিবর্তন করা হবে না।"
  26: "আমি নিশ্চিত করি যে আপনার যোগাযোগকে বিকৃত করা হচ্ছে না।"
  27: "কারণ সংখ্যা ৩: পরিচয়।"
  28: "উদাহরণের সময়!"
  29: "পরিচয়ের অর্থ হল আমি নিশ্চিত করতে পারি যে এই মেসেজটি Compugter এর কাছ থেকে আসছে।"
  30: "একটি ডিজিটাল স্বাক্ষর একটি মেসেজ এ সংযুক্ত করা হলে প্রেরকের পরিচয় নিশ্চিত করা যায়।"
  31: "ডিজিটাল স্বাক্ষর আপনার ইমেইলের এমন টেক্সট নয় যা দ্বারা ইমেইল সমাপ্ত করবেন । যে কেউ এটি কপি করতে পারে ;)"
  32: "আর যখন আপনি ওয়েব ব্রাউজ করছেন, তখন পরিচয়ের অর্থ হল আপনি যে সাইটটি দেখছেন তা নিশ্চিত করে এটা অবশ্যই সেই সাইট।"
  33: "HTTPS, SSL সার্টিফিকেটের মাধ্যমে নিশ্চিত করে যে আপনি ঠিক সেই প্রাপককে সংযুক্ত করছেন যাকে আপনি আশা করেছিলেন।"
  34: "এই SSL সার্টিফিকেট বৈধ এবং একটি বৈধ সার্টিফিকেট অথরিটি দ্বারা ইস্যু করা হয়েছে যা নিশ্চিত করে এখন আপনি মেসেজ পাঠাতে প্রস্তুত।"
  35: "আমরা শীঘ্রই SSL সার্টিফিকেট এবং সার্টিফিকেট অথরিটি সম্পর্কে আরও কথা বলব, তাই সাথে থাকুন।"
  36: "সারসংক্ষেপে, গোপনীয়তা, অখণ্ডতা এবং পরিচয় হল HTTPS-এর গুরুত্বপূর্ণ কারণ।"
  next: "HowHTTPS.works-এ পরবর্তী..."
  next_teaser: "এখন আমরা জানি, কেন পরবর্তী ধাপে সিমেট্রিক এবং অ্যাসিমেট্রিক এনক্রিপশন বুঝতে হবে। এগুলো কঠিন মনে হলেও আসলে সহজ।"


ep2:
 1: "চাবিগুলো"
2: "ওয়েবের গোপনীয়তা, অখণ্ডতা এবং পরিচয় নিশ্চিত করার জন্য HTTPS একটি প্রক্রিয়া প্রয়োজন।"
3: "এবং সেই প্রক্রিয়াটিকে বলে 'এনক্রিপশন'।"
4-1: "চলো এনক্রিপশন অ্যালগরিদমের দুই ধরনের কথা বলি।"
4-2: "তাহলে, চাবিগুলো কোথায় রেখেছি?"
5-1: "শেষ পর্যন্ত!"
5-2: "আসো, শুরু করি সিমেট্রিক কী অ্যালগরিদম দিয়ে।"
6: "এই ক্ষেত্রে, একটি কী-ই এনক্রিপ্ট এবং ডিক্রিপ্ট করার জন্য ব্যবহৃত হয়।"
7: "ব্রাউজারবার্ডকে বার্তা পাঠানোর আগে, আমি একটি কী দিয়ে বার্তাটি এনক্রিপ্ট করি।"
8: "তুমি এনক্রিপশন প্রক্রিয়াকে এমনভাবে কল্পনা করতে পার যে, বার্তাটি একটি বাক্সে রেখে সেটিকে একটি চাবি দিয়ে বন্ধ করে দিচ্ছ।"
9: "যার কাছে কী থাকবে শুধুমাত্র সে-ই বাক্স খুলে বার্তাটি পড়তে পারবে।"
10: "এটি নিশ্চিত করে যে বাক্সটি সঠিক কী থাকা ব্যক্তির কাছে পৌঁছানোর আগ পর্যন্ত খোলা যাবে না।"
11: "যখন ব্রাউজারবার্ড বাক্সটি পায়, তখন তারা তাদের চাবি ব্যবহার করে এটি খুলে বার্তাটি পড়ে।"
12: "চাবি গোপন রাখা গুরুত্বপূর্ণ। তোমার উচিত চাবিটি স্পষ্ট টেক্সটে শেয়ার না করা, বাক্সের সাথে পাঠানো না বা পকেটে রেখে দেওয়া।"
13: "মনে রেখো, যার কাছে চাবি থাকবে সে-ই বাক্স খুলতে পারবে।"
14-1: "বাক্স ব্যবহার করা এনক্রিপশন বুঝতে একটি চমৎকার ভিজ্যুয়াল উপায়, তবে এটি একেবারেই সরলীকৃত।"
14-2: "চলো এটি ঠিক করি!"
15: "বাস্তবে, যার কাছে চাবি নেই সে বার্তাটি দেখলে শুধুই এলোমেলো টেক্সট দেখতে পায়।"
16: "এই টেক্সটটি একটি এনক্রিপশন অ্যালগরিদম দ্বারা তৈরি।"
17: "অর্থাৎ, টেক্সটটি ধাপে ধাপে এলোমেলোভাবে সাজানো হয়েছে।"
18: "এটি একাধিকবার রূপান্তরিত এবং ছড়িয়ে দেওয়া হয়েছে। প্রতিবার বার্তাটি আরও অস্পষ্ট করা হয়েছে।"
19: "একটি বার্তা ডিক্রিপ্ট করতে হলে, শুধু একই ধাপগুলো উল্টে প্রয়োগ করতে হয়।"
20: "এনক্রিপশন কী বার্তার সাথে মিশে থাকে, তাই এনক্রিপশন অ্যালগরিদম জানলেও, কী ছাড়া বার্তাটি বোঝা যায় না।"
21: "এখানে একটি কী কেমন দেখতে হতে পারে।"
22: "সিমেট্রিক কী-এর একটি প্রধান সমস্যা হলো এগুলো শেয়ার করা কঠিন।"
23: "কী বিতরণ করার সময় খুব সাবধানতা অবলম্বন করতে হবে।"
24: "এটি আমাদের অ্যাসিমেট্রিক কী-এর দিকে নিয়ে যায়।"
25: "অ্যাসিমেট্রিক কী-এ তোমার ২টি কী থাকে।"
26: "একটি কী পাবলিক এবং অন্যটি প্রাইভেট। এরা জোড়া হয়ে একসাথে কাজ করে।"
27-1: "তোমার পাবলিক কী যেকারও সাথে শেয়ার করো। এটি স্পষ্ট টেক্সটে পাঠাও, স্টিকার বানাও, ট্যাটু করাও। যেভাবে খুশি! এটি পাবলিক!"
27-2: "আমার ট্যাটু পছন্দ।"

  28: "কমপিউগটার তাদের পাবলিক কী ব্রাউজারবার্ডের কাছে পাঠাচ্ছে।"
29: "এবং এখন আমি তাদের কাছে একটি বার্তা পাঠাচ্ছি, যা আমি তাদের পাবলিক কী দিয়ে এনক্রিপ্ট করেছি।"
30: "অন্যভাবে বললে, ব্রাউজারবার্ড বার্তাটি একটি বাক্সে রাখে এবং কমপিউগটার-এর পাবলিক কী দিয়ে সেটি লক করে।"
31: "আমি এখন আমার প্রাইভেট কী ব্যবহার করে বার্তাটি পড়তে পারি।"
32: "মূল ভাবনাটি এটাই। শুধুমাত্র প্রাইভেট কী-ই পাবলিক কী জোড়া দিয়ে লক করা বাক্স খুলতে পারে।"
33: "আমি ব্রাউজারবার্ডের পাবলিক কী ব্যবহার করে তাদের কাছে আরেকটি বার্তা পাঠাই।"
34: "এটি শুধু গোপনীয়তার জন্যই নয়, পরিচয়ের জন্যও দুর্দান্ত কারণ আমরা নিশ্চিত থাকতে পারি যে শুধুমাত্র কী-এর মালিকই বার্তাটি খুলতে পারে।"
35: "পরবর্তী অংশে আমরা দেখব কিভাবে সিমেট্রিক এবং অ্যাসিমেট্রিক কী SSL-এর মাধ্যমে সাইটের সাথে সংযোগ করার সময় ভূমিকা পালন করে।"
next: "পরবর্তী অংশে HowHTTPS.works-এ..."
next_teaser: "এনক্রিপশনের জন্য হুররে! এরপর কী? জেনে নাও ব্রাউজার এবং ইন্টারনেটের মধ্যে গোপন হ্যান্ডশেক যা তোমার তথ্যকে নিরাপদ এবং সুরক্ষিত করে।"




ep4:
  1: "The differences between HTTPS, SSL, and TLS"
  2: "It's easy to confuse these terms and use them interchangeably."
  3: "Let's look into each one and see how they differ."
  4: "What's HTTPS?"
  5: "HTTPS is the secured version of HTTP: HyperText Transfer Protocol."
  6: "HTTP is the protocol used by your browser and web servers to communicate and exchange information."
  7: "When that exchange of data is encrypted with SSL/TLS, then we call it HTTPS. The 'S' stands for Secure."
  8: "OMG! Wait! Did I say SSL/TLS! Why?"
  9: "Because it's the precise way to talk about SSL and TLS."
  10: "SSL stands for 'Secure Sockets Layer'. A protocol created by Netscape."
  11: "SSL is a dinosaur by Internet standards. The first version was never released and version 2 launched with the browser Netscape 1.1 in 1995."
  12: "Later that year Netscape released version 3 because version 2 had some major security problems."
  13: "We were all happy cats until 1999. Browser wars between Netscape and Microsoft, the need for standards, and Britney Spears - '...Baby One More Time' changed the world as we know it. Fur-ever."
  14: "Oops, I did it again."
  15: "Netscape gave control of SSL protocol to the IETF: Internet Engineering Task Force."
  16: "Before 1999 ended, IETF released TLS version 1.0 (Which was really SSL 3.1)."
  17: "SSL was renamed to TLS: Transport Layer Security. Creating confusion and chaos still to this day."
  18: "Thanks 1999."
  19: "TLS 1.0 took off and version 1.1 was released in 2006."
  20: "A couple of years later, in 2008, TLS 1.2 was released to address a few flaws and exploits."
  21: "However, it's not until 2013 that browsers start to catch up and add support for TLS 1.2."
  22: "To add to the confusion, SSL 3.0 was officially deprecated in 2015."
  23-1: "TLS 1.3 was approved in march 2018 and your browser might already support it."
  23-2: "Click here to check the current TLS version for your browser."
  23-3: "But come back to finish the story."
  24: "TLS 1.3 brings great security improvements and removes old weaker features."
  25: "No worries if your browser doesn't support it yet. TLS 1.2 is still the recommended version if you are reading this in Spring/Summer 2020."
  26: "Let's recap."
  27: "HTTPS is just the HTTP protocol but with data encryption using SSL/TLS."
  28: "SSL is the original and now deprecated protocol created at Netscape in the mid 90s."
  29: "TLS is the new protocol for secured encryption on the web maintained by IETF."
  30: "And now you know the hiss-tory."
  next: "Next on HowHTTPS.works..."
  next_teaser: "Certificates and Certificate authorities: What Do They Know? Do They Know Things?? Let's Find Out!"

ep5:
  1: "Certificate Authorities"
  2: "A certificate authority (CA) is a third-party organization with 3 main objectives:"
  3: "1. Issuing certificates."
  4: "2. Confirming the identity of the certificate owner."
  5: "3. Providing proof that the certificate is valid."
  6: "You might have heard of Symantec, Comodo, or Let's Encrypt, among others."
  7: "Becoming a CA is an intense task of security requirements and audits."
  8: "You need to be trusted to be accepted into a root store."
  9: "A root store is basically a database of trusted CAs."
  10: "Apple, Windows, and Mozilla run their own root stores that they pre-install in your computer or device."
  11: "Which certificate should you buy? You have basically 3 flavors."
  12: "Domain validated. The certificate just verifies the domain name, and nothing else. You probably need this one."
  13: "Organization validated. The certificate requires the validation and manual verification of the organization behind the certificate."
  14: "Extended validation. The certificate requires an exhaustive verification of the business."
  15: "All valid certificates result in the browser displaying a secure badge in the browser bar. EV certificates generally display the company name as well."
  16: "But how do certificates get validated?"
  17: "When a CA issues a certificate, they sign the certificate with their root certificate pre-installed in the root store."
  18: "Most of the time it's an intermediate certificate signed with a root certificate."
  19: "If a cat-astrophy would occur and the root certificate is compromised, it's easier to revoke the intermediate certificates, since the root certificates are installed on each device."
  20: "Let's walk through how a certificate is validated. The process is based on a 'chain of trust'."
  21: "Your browser connects to a site via HTTPS and downloads the certificate."
  22: "The certificate is not a root certificate."
  23: "Your browser downloads the certificate that was used to sign the certificate on the site."
  24: "But this certificate is still not the root certificate."
  25: "Your browser once more looks up the certificate that signed the intermediate certificate."
  26: "It's the root certificate! Yay!"
  27: "The entire certificate chain is trusted, and thus the site certificate is trusted as well."
  28: "In the event that the last certificate is not a root certificate, and there are no more certificates to download, the chain is untrusted."
  29: "But why use a certificate authority when you can self-sign your certificates?"
  30: "A self-signed certificate provides the same level of encryption as one generated by an authority."
  31: "No crabs can spy on your data."
  32: "And there is no charge to self-sign your certificates!"
  33: "Yes, but almost every browser checks that the certificate is issued by a trusted authority."
  34: "As such visitors are warned that the certificate cannot be trusted."
  35: "Self-signed certificates can be useful for testing, and intranets, but you should avoid using them on public sites."
  36: "Self-signed certificates can be forged. Basically, they say 'Trust me, it's me, I promise!'."
  37: "A trusted certificate says: 'Trust me, an authority verified me'."
  38: "Talking about trust. Thank you for trusting us through this story."
  39: "Unfortunately, it is coming to an end."
  40: "We hope you enjoyed this comic!"
  41: "See you soon!"
  end-title: "Hey, you did it!"
  end-p1: "You finished the comic! Thanks from the bottom of of our cat paws for spending some of your day reading about HTTPS."
  end-p2: "We propose three activities to distract you from the fact that there is not another episode to read."
  option-1: "Take the quiz"
  option-1-p: "To make it up to you, you can test your brand hot knowledge of HTTPS in a quiz. Yes, that's right. We even send you a certificate of completion if you score high enough."
  option-2: "Vent on social networks"
  option-2-p: "The human thing to do. If you want to put more pressure on us to make more comics, here are a few examples to get us to the edge of our seats."
  option-3: "Visit DNSimple"
  option-3-p: "If you enjoyed the comic, and need an SSL certificate to secure your site, or a rock solid and easy-to-use DNS (not our words), or a brand new fancy domain, have a look at us."
  post-data: "P.S. If you want to suggest a new episode (please no, because we'll have to update this page) or give us feedback about the existing ones,"
  post-data-link: "we are all cat hears"